package com.dongnaebook.domain.diary;

import com.dongnaebook.domain.diary.DTO.DiaryDetailDTO;
import com.dongnaebook.domain.diary.DTO.DiaryRequestDTO;
import com.dongnaebook.domain.diary.DTO.DiaryResponseDTO;
import com.dongnaebook.domain.post.DTO.PostResponseDTO;
import com.dongnaebook.domain.post.PostRepository;
import com.dongnaebook.domain.user.UserMapper;
import java.time.LocalDate;
import java.time.LocalDateTime;
import lombok.Getter;
import lombok.Setter;
import java.util.List;

@Getter
@Setter
public class DiaryMapper {
    public static Diary toEntity(DiaryRequestDTO diaryRequestDTO, String Title, String Content) {
        return Diary.builder()
                .title(diaryRequestDTO.getTitle())
                .content(diaryRequestDTO.getContent())
                .region(diaryRequestDTO.getRegion())
                .date(diaryRequestDTO.getDate() != null ? diaryRequestDTO.getDate().atStartOfDay() : null)
                .keywords(diaryRequestDTO.getKeywords())
                .isAutoGenerated(diaryRequestDTO.isAutoGenerated())
                .build();
    }

    public static DiaryResponseDTO toResponse(Diary diary) {
        return DiaryResponseDTO.builder()
                .id(diary.getId())
                .title(diary.getTitle())
                .content(diary.getContent())
                .region(diary.getRegion())
                .keywords(diary.getKeywords())
                .isAutoGenerated(diary.isAutoGenerated())
                .build();
    }

    public static DiaryDetailDTO toDetailResponse(Diary diary, List<PostResponseDTO> posts) {
        return DiaryDetailDTO.builder()
                .id(diary.getId())
                .title(diary.getTitle())
                .content(diary.getContent())
                .date(LocalDate.from(diary.getDate()))
                .posts(posts)
                .build();
    }
}
